{"meta":{"title":"AhriLove","subtitle":null,"description":null,"author":"陈浩东","url":"http://yoursite.com","root":"/"},"pages":[{"title":"404 Not Found","date":"2019-11-05T14:21:22.924Z","updated":"2019-10-25T13:08:33.249Z","comments":true,"path":"404.html","permalink":"http://yoursite.com/404.html","excerpt":"","text":"404 Not Found **很抱歉，您访问的页面不存在** 可能是输入地址有误或该地址已被删除"},{"title":"","date":"2019-11-05T14:21:22.942Z","updated":"2019-11-01T08:20:13.859Z","comments":true,"path":"sport/index.html","permalink":"http://yoursite.com/sport/index.html","excerpt":"","text":""},{"title":"所有分类","date":"2019-11-05T14:21:22.930Z","updated":"2019-10-25T13:05:49.103Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2019-11-05T14:21:22.945Z","updated":"2019-10-25T13:06:22.321Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"","date":"2019-11-10T06:59:12.000Z","updated":"2019-11-10T06:59:11.928Z","comments":true,"path":"mylist/index.html","permalink":"http://yoursite.com/mylist/index.html","excerpt":"","text":"&nbsp;&nbsp;&nbsp;我从来不记在辞典上已经印有的东西。我的记忆力是运用来记忆书本上还没有的东西。 ——爱因斯坦&nbsp;&nbsp;在这主题页中我将分享自己收集的一些资料以及文档 知识点 链接 RGB颜色对照表 https://www.114la.com/other/rgb.htm Hexo的ico图标 http://www.wapadd.cn/icons/awesome/index.htm bilibili视频收藏 https://space.bilibili.com/215893581/favlist git详细教程 https://blog.csdn.net/u011535541/article/details/83379151 Django2.0详细资料文档 https://pan.baidu.com/s/1ppN8GSDdOdcd3ew0e7SxMQ 开发书籍电子版大全 https://pan.baidu.com/s/1HJtB9EieaMZPU0fSK2kgkQ docker详情mindmanage https://pan.baidu.com/s/1nUE4pfe2wThYVGMEYqADXw 网络用语大全~小鸡词典 https://jikipedia.com/ Vue-Devtools最简单的配置，有手就行 https://blog.csdn.net/weixin_38654336/article/details/80790698 Jetbrains全家桶注册码 http://www.medeming.com/ 阿里中间件团队博客 http://jm.taobao.org/ font-awesome ico小图标 https://fontawesome.com/icons?d=gallery&amp;m=free 亲测可用：navicat premium12 破解教程 https://blog.csdn.net/u013162035/article/details/89456708 小马视频码云仓库 https://gitee.com/komavideo/projects"},{"title":"","date":"2019-11-09T02:26:48.506Z","updated":"2019-11-09T02:26:48.470Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"/' \\\\ //\\\\ \\\\ // `\\ \\\\ // 祝大家： .-'^'-. .' a___a `. 春节愉快 合家欢乐！ == (___) == '. ._I_. .' 心想事成 红包拿来！ ____/.`-----'.\\____ ---^^^_v_^^^--- [###(__)#### 自我介绍&nbsp;&nbsp;&nbsp;大家好，我叫陈浩东，浩东陈的陈，你也可以叫我的别名苯苯。97年的四川绵阳人，于2019年6月5日毕业于中国计量大学信息与计算科学专业。虽然口头上一直在说~不会再爱了( ﹁ ﹁ ) ~→，但是我还是忘不了那个badwoman,试问，如果不是真心喜欢，谁愿意当舔狗呢？☹ ☹ ☹ &nbsp;&nbsp;&nbsp;你们有可能会说：你那叫喜欢吗？你那是馋她的身子，你下贱行吧，badwoman，拜拜就拜拜，下一个更乖。别爱我，没结果，除非花手摇过我！ &nbsp;&nbsp;&nbsp;作为一个正能量，儒雅随和的知识分子，兴趣爱好当然必不可少。喜欢羽毛球、乒乓球、登山、游泳（仅能浮起来☹ ☹）、钓鱼以及英雄联盟，当然作为一个资深的土味鉴定师,文艺复兴模仿者,能够快速洞察每一个土味视频背后的正能量思想，有内味了。 2019年职业技术规划： 奋起直追：考上川大“在职”研究生 Python进阶，web框架以及爬虫框架~js逆向解密爬虫 Vue基础知识 ThinkPHP以及PHP学习 HTML+CSS+JavaScript Jquery进阶以及bootstrap Docker容器虚拟技术 Linux的Ubuntu要经常多用 数据库进阶以及存储过程 每日作息安排：1.早上7:25-7:50起床2.中午早点休息，下午一点上班3.五点下班：会寝室吃饭并休息到6:00-6:30,继续学习4.晚上10:40到11:00开始收拾收拾准备下班5.回到寝室，做10-15分钟的Keep6.周六周日特殊安排：早上9-10点起床，其余正常安排 7.周而复始，学会坚持，每天多学一点，未来会好很多，兄弟萌，不甘碌碌无为，那就，冲，杀！！ 推荐学习方法： 渗透科学学习法 晚上睡觉前，把文献放在脑袋和枕头之间，知识会从浓度较高的的书本向浓度较低的脑袋渗透。书本越多，外界知识浓度越高，夜间复习的效果越好！"},{"title":"我的朋友们","date":"2019-11-08T08:07:51.233Z","updated":"2019-11-08T08:07:51.174Z","comments":true,"path":"friends/index.html","permalink":"http://yoursite.com/friends/index.html","excerpt":"","text":"&nbsp;&nbsp;&nbsp;欢迎大家留言分享自己发掘的优秀博文、微信文章、GitHub开源项目、二次元、摄影、运动、读书、影视…-留言请告诉我你的名称、主页、头像、标签或者简介哦～-如果想定制你的卡片颜色，也可以留言告诉我哦～（十六进制颜色码，如：#FF0000）"}],"posts":[{"title":"docker容器虚拟化技术","slug":"docker容器虚拟技术","date":"2019-11-09T16:00:00.000Z","updated":"2019-11-10T11:59:19.023Z","comments":true,"path":"2019/11/10/docker容器虚拟技术/","link":"","permalink":"http://yoursite.com/2019/11/10/docker%E5%AE%B9%E5%99%A8%E8%99%9A%E6%8B%9F%E6%8A%80%E6%9C%AF/","excerpt":"简单来说，在Windows系统下安装各种运行环境的坑简直不要太多了(●￣(ｴ)￣●)，并不仅限于docker、Nginx、PHP、Python等等，我会尽详细写出实际过程中遇到的各种各样的奇葩问题","text":"简单来说，在Windows系统下安装各种运行环境的坑简直不要太多了(●￣(ｴ)￣●)，并不仅限于docker、Nginx、PHP、Python等等，我会尽详细写出实际过程中遇到的各种各样的奇葩问题 1.docker适用环境其实docker本身也没有太多在Windows下花功夫。目前，docker仅支持Linux与Windows企业版、专业版、教育版。ps：家庭版不支持docker,并且win10下可以安装docker-for-windows,这个安装包是专门适用于win10，安装简单，而对于win7/8则可以使用Docker Toolbox下载地址 2.Windows下无法对docker容器进行端口访问（端口映射的问题）1.问题详情&nbsp;&nbsp;&nbsp;在Windows10系统服务器中安装了docker和docker-compose&nbsp;&nbsp;&nbsp;并尝试在其中运行Nginx服务，映射也做好&nbsp;&nbsp;&nbsp;问题：在主机的浏览器中，打开localhost:port无法访问对应的Web服务。2.问题解析&nbsp;&nbsp;&nbsp;原因：docker是运行在Linux上的，在Windows中运行docker，实际上还是在Windows下先安装了一个Linux环境，然后在这个系统中运行的docker。也就是说，服务中使用的localhost指的是这个Linux环境的地址，而不是我们的宿主环境Windows10。3.解决办法&nbsp;&nbsp;&nbsp;启动docker命令行窗口&nbsp;&nbsp;&nbsp;输入命令:docker-machine ip default&nbsp;&nbsp;&nbsp;Linux的ip地址，一般情况下这个地址是192.168.99.100&nbsp;&nbsp;&nbsp;然后在Windows的浏览器中，输入 http://IP:port 即可启用（http://192.168.99.100：8069） 3.docker与VMware不可兼容&nbsp;&nbsp;&nbsp;在Windows下安装docker，第一步就是要打开Hyper-V(打开控制面板 - 程序和功能 - 启用或关闭Windows功能，勾选Hyper-V),开启win自带的虚拟管理技术。但是若想要使用VMware，则必须关闭Hyper-V，鱼和熊掌不可兼得呀！(′д｀ )…彡…彡 4.Windows：vmware与hyper-v不兼容,请移除hyper-v角色1、请移除hyper-v角色。（1）以管理员身份（win + x）运行命令提示符；（2）执行命令：bcdedit /set hypervisorlaunchtype off（3）重启系统，运行vm即可。2、如果想要恢复hyper启动：&nbsp;&nbsp;&nbsp;bcdedit / set hypervisorlaunchtype auto 5.docker run后接/bin/sh和接/bin/bash的区别是什么：比如我们要获取一个nginx镜像，同一镜像存在有不同的tags&nbsp;&nbsp;&nbsp;/bin/sh命令仅适用于tags带alpine标签的： nginx:1.17-alpine；&nbsp;&nbsp;&nbsp;/bin/bash命令仅适用于tags不带alpine标识的：nginx：laster，nginx:1.8… 6.docker运行MySQL服务 拉取镜像docker pull mysql:[tag] 创建并运行容器docker run --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 -d mysql：5.6 ps: -p 表示指定访问端口&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-e 设置环境变量，或者覆盖已存在的环境变量&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-d 表示以守护式方式来运行容器&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MYSQL_ROOT_PASSWORD=123456 声明MySQL的用户名为ROOT，密码为123456 查看容器是否启动docker ps 启动容器docker start container_id 进入容器内部,以命令行交互docker exec -it container_id /bin/bash 登录MySQLmysql -u root -p 然后在输入密码 成功表示已经成功登陆MySQL 7.最强万能公式:数据卷挂载式创建容器12345守护式：docker run -di [--privileged=true] -P(或者指定端口 -p 外部port:该容器默认端口) \\--name=&quot;newNginx&quot; -v /home/chd/Desktop/entwechatapp:/var/www/EntWeChatApp:rw nginx:1.15.7-alpine交互式：docker run -it [--privileged=true] -P(或者指定端口 -p 外部port:该容器默认端口) \\--name=&quot;newNginx&quot; -v /home/chd/Desktop/entwechatapp:/var/www/EntWeChatApp:rw nginx:1.15.7-alpine含义： a） 以-v /home/chd/Desktop/entwechatapp:/var/www/EntWeChatApp:rw 带rw(read,write)权限来将宿主机与容器进行数据卷挂载 b) docker run 以新容器名和端口号以及守护式或者交互式来创建容器 8.宿主机与docker容器权限纠纷问题描述：&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;它来了！问题又出现了！哭啦。数据卷挂载时，即使声明了rw权限，在宿主机中创建文件，数据共享后，容器内能够具有正常的rw权限；但在容器内新建了文件后，宿主机就只有只读权限，无法修改文件内容。 解决方案：宿主机的权限不够&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在（7）式中的万能公式中添加：docker run ··· --privileged=true ··· 9.docker配置nginx的配置文件命令：docker run --name=&quot;dnmp_nginx&quot; -p 80:80 -v /home/docker-nginx/nginx.conf:/etc/nginx/nginx.conf -v /home/docker-nginx/log:/var/log/nginx -v /home/docker-nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf -di nginx:\\[tags]&nbsp;&nbsp;&nbsp;&nbsp;第一个-v 表示将你本地的nginx.conf覆盖你要起启动的容器的nginx.conf文件，第二个表示将日志文件进行挂载，就是把nginx服务器的日志写到你docker宿主机的/home/docker-nginx/log/下面。第三个-v 表示的和第一个-v意思一样的&nbsp;&nbsp;&nbsp;&nbsp;我个人更喜欢守护式映射的方式，麻烦的是需要自己准备好nginx.conf 和default.conf文件，我是直接从容器里面复制的，然后根据自己的需要改的 我都想把杀了，部署nginx太多坑了，不过参考了此博文，最终解决了问题，解决方法： 1.创建三个根目录根据情况创建：/docker/nginx/conf www logs docker run -d -p 80:80 --name=”nginx” --net host -v /docker/nginx/www:/usr/share/nginx/html -v /docker/nginx/logs:/var/log/nginx nginx:1.17.5 2.不对配置文件进行数据挂载即 -v /docker/nginx/conf/nginx.conf:/etc/nginx/nginx.conf 这个 3.docker exec -it nginx /bin/bash （进入容器 获取文件） 4.cd /etc/nginx/ （这里主要获取配置文件路径的）,然后exit 5.数据拷贝进入宿主机目录文件 cd /docker/nginx/conf/将已经运行成功的容器的配置文件拷贝到宿主机的配置文件目录：docker cp 容器ID:/etc/nginx/nginx.conf .（ps：“.”表示拷贝到当前目录） ps：文件copy成功后 把nginx容器先删除掉 创建最终的nginx容器 123456789docker run -di -p 80:80 --name nginx [--net host] :再思考一下有没有必要写，使用–net = host时,它告诉容器使用主机网络堆栈.因此无法将端口暴露给主机,因为它是主机(就网络堆栈而言).-v /docker/nginx/www:/usr/share/nginx/html -v /docker/nginx/conf/nginx.conf:/etc/nginx/nginx.conf -v /docker/nginx/logs:/var/log/nginx nginx:1.17.5ps:成功后就代表部署成功 PS：访问可能会403 因为/docker/nginx/www/ 里面没有index.html放进去就好了 挂载成功后，给宿主机上的www目录（或整个文件目录）增加权限，不然一直无法读写：&nbsp;&nbsp;&nbsp;&nbsp;sudo chmod -R 777 目标目录 ：给目标目录赋予最大管理员权限&nbsp;&nbsp;&nbsp;&nbsp;sudo chmod +/-rwx 文件名|目录 给文件或目录的赋予权限 10.docker配置MySQL，redis教程等，请点击此处链接命令:docker run -di -p 12345:3306 \\--name=&quot;mysql&quot; -v /lnmp/mysql/conf:/etc/mysql/conf.d -v /lnmp/mysql/logs:/logs -v /lnmp/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456:rw mysql:5.6 命令说明：-p 12345:3306：将主机的12345端口映射到docker容器的3306端口。--name mysql：运行服务名字-v /lnmp/mysql/conf:/etc/mysql/conf.d ：将主机/lnmp/mysql录下的conf/my.cnf 挂载到容器的 /etc/mysql/conf.d-v /lnmp/mysql/logs:/logs：将主机/lnmp/mysql目录下的 logs 目录挂载到容器的 /logs。-v /lnmp/mysql/data:/var/lib/mysql ：将主机/lnmp/mysql目录下的data目录挂载到容器的 /var/lib/mysql-e MYSQL_ROOT_PASSWORD=123456：初始化 root 用户的密码。-d mysql:5.6 : 后台程序运行mysql5.6 11.外部Windows如何访问docker内的容器 1.基本架构：Windows，Dockers，Linux三者关系 2.相关操作 2.1 关闭Linux防火墙：systemctl stop firewalld.service 2.2 查看Linux，Docker的IP地址:ifconfig(区别于Windows的ipconfig命令) 2.3 Windows访问测试: 思想：docker作为一个容器虚拟技术，创建并启动相关的容器服务，并把端口映射到Linux系统中。比如MySQL：docker启动MySQL服务后，并映射了一个外部访问的某端口（比如还是3306），则此刻Linux就具有了3306这个一个端口=&gt;外界访问方式应该是：访问虚拟机Linux上与之相绑定docker容器映射出的端口。","categories":[{"name":"docker","slug":"docker","permalink":"http://yoursite.com/categories/docker/"}],"tags":[{"name":"docker","slug":"docker","permalink":"http://yoursite.com/tags/docker/"},{"name":"VMware","slug":"VMware","permalink":"http://yoursite.com/tags/VMware/"},{"name":"images","slug":"images","permalink":"http://yoursite.com/tags/images/"},{"name":"container","slug":"container","permalink":"http://yoursite.com/tags/container/"},{"name":"Hyper-V","slug":"Hyper-V","permalink":"http://yoursite.com/tags/Hyper-V/"},{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"交互式与守护式创建","slug":"交互式与守护式创建","permalink":"http://yoursite.com/tags/%E4%BA%A4%E4%BA%92%E5%BC%8F%E4%B8%8E%E5%AE%88%E6%8A%A4%E5%BC%8F%E5%88%9B%E5%BB%BA/"}]},{"title":"Vue","slug":"Vue","date":"2019-11-07T16:00:00.000Z","updated":"2019-11-10T07:49:12.143Z","comments":true,"path":"2019/11/08/Vue/","link":"","permalink":"http://yoursite.com/2019/11/08/Vue/","excerpt":"&nbsp;&nbsp;Vue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式框架。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合,有很好的数据双向绑定性。","text":"&nbsp;&nbsp;Vue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式框架。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合,有很好的数据双向绑定性。 1.jQuery与Vue糅合使用 1.jquery基本使用：先导入相关jQuery库包，然后按人类正常思维，就声明入口函数,然后在入口函数中书写逻辑代码 123456&lt;script&gt; $(function()&#123; ... ... &#125;);&lt;/script&gt; 但是，奇怪他个猪猪皮，即使不用声明入口函数，直接书写逻辑程序，经过多次测试，TM居然还可以正常使用 2.jQuery+Vue(若想两者结合使用，则一定不能声明入口函数，否则Vue无法使用)当你想测试Vue时，就会出现vue实例未声明的报错 &nbsp;&nbsp;1 Uncaught ReferenceError: vm is not defined&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;at :1:1 12345678910111213141516171819202122232425262728293031323334353637383940&lt;body&gt; &lt;div id=&quot;app&quot;&gt; &lt;div class=&quot;rookie&quot;&gt; &lt;p&gt;hello fpx&lt;/p&gt; &lt;p&gt;hello IG&lt;/p&gt; &lt;p&gt;hello kk&lt;/p&gt; &lt;pre&gt;total:&#123;&#123;number&#125;&#125;&lt;/pre&gt; &lt;h6 :class=&quot;&#123;box:isactive&#125;&quot;&gt;this is new h6&amp;nbsp;&amp;nbsp;&lt;/h6&gt; &lt;h5 :class=&quot;[box1,box2,box3?&apos;luko&apos;:&apos;&apos;]&quot;&gt;this is new h6&amp;nbsp;&amp;nbsp;&lt;/h5&gt; &lt;/div&gt; &lt;input type=&quot;text&quot; placeholder=&quot;please input number&quot; v-model=&quot;msg&quot; @keyup.enter=&quot;fn&quot;&gt;按键盘enter键触发:&#123;&#123;msg&#125;&#125;&lt;br&gt; &lt;input type=&quot;text&quot; placeholder=&quot;please click enter&quot; v-model=&quot;message&quot; @keyup.13=&quot;greet(9527)&quot;&gt;按键盘enter键触发&#123;&#123;message&#125;&#125;&lt;br&gt; &lt;/div&gt; &lt;script&gt; console.log($(&apos;p&apos;).length); let vm = new Vue(&#123; el:&apos;#app&apos;, data:&#123; number:$(&apos;p&apos;).length, isactive:true, box1:&apos;moko&apos;, box2:&apos;boka&apos;, box3:true, msg:&apos;&apos;, message:&apos;&apos;, &#125;, methods:&#123; fn()&#123; alert(this.msg) &#125;, greet(hi)&#123; alert(this.message+hi) &#125; &#125;, &#125;); $(&apos;h5&apos;).append(&apos;&lt;b&gt;this is new plus increment&lt;/b&gt;&apos;); $(&apos;h6&apos;).append(&apos;&lt;br&gt; hello world&apos;); &lt;/script&gt;&lt;/body&gt; 2.Vue的组件 1.组件创建方式分为全局组件与局部组件： &nbsp;&nbsp;&nbsp;全局组件：可以被多个APP进行调用,在APP实例外创建;定义一个名为 button-counter 的新组件:组件名称若使用驼峰原则，引用组件时需要全部小写，并且两个单词之间用“-”连接;若不使用驼峰原则时，直接使用原组件名 12345678910Vue.component(&apos;buttonCounter&apos;, &#123; da: function () &#123; // 1.组件可以有自己的data数据，组件中的data必须是一个方法，且这个方法内部必须返回一个对象才行，而实例中的data可以为一个对象 return &#123;count: 0&#125; &#125;, data:&#123; message:&apos;badwoman&apos; , template: &apos;&lt;button v-on:click=&quot;count++&quot;&gt;&#123;&#123;message&#125;&#125; clicked me &#123;&#123; count &#125;&#125; times.&lt;/button&gt;&apos; // 2. 全局组件有template属性 &#125;) 注意：重要的来了，必须理解┗|｀O′|┛ 嗷~~ 创建格式：Vue.component('组件名',{ /* ..组件的模板对象.. */ }) &nbsp;&nbsp;&nbsp;组件的第一个参数味组件名，而第二个参数是以对象的形式去描述一个组件。组件是可复用的 Vue 实例， 所以它们与 new Vue 接收相同的选项，例如 data、computed、watch、methods 以及生命周期钩子等。仅有的例外是像 el 这样根实例特有的选项","categories":[{"name":"Vue","slug":"Vue","permalink":"http://yoursite.com/categories/Vue/"}],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://yoursite.com/tags/Vue/"},{"name":"Jquery","slug":"Jquery","permalink":"http://yoursite.com/tags/Jquery/"}]},{"title":"MySQL数据库","slug":"MySQL数据库","date":"2019-11-07T06:44:34.320Z","updated":"2019-11-07T06:44:34.323Z","comments":true,"path":"2019/11/07/MySQL数据库/","link":"","permalink":"http://yoursite.com/2019/11/07/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/","excerpt":"&nbsp;&nbsp;&nbsp;&nbsp;最近严重记忆力下降加上一直没有怎么用到数据库，好多命令都回忆不起来了，做个小笔记，mark一下","text":"&nbsp;&nbsp;&nbsp;&nbsp;最近严重记忆力下降加上一直没有怎么用到数据库，好多命令都回忆不起来了，做个小笔记，mark一下 1.启动服务net start 服务器名（Windows）service start 服务器名（linux） 2.登录与修改密码&nbsp;&nbsp;&nbsp;&nbsp;mysql -u root -p -h localhost：登录MySQL（p表示密码；u表示用户名；h表示主机地址） &nbsp;&nbsp;&nbsp;&nbsp;mysqladmin -u用户名 -p旧密码 password新密码 :修改用户名密码 3.基本使用show databases; 用于显示所有的数据库use 数据库名; 使用目标数据库select database()/version()/now()/user(); 显示当前连接的信息show tables; 用于显示选中数据库下的所有的表desc table_Name;查看表结构 创建数据库并指定编码格式:create database if not exists 数据库名 character set utf8;删除数据库：DROP DATABASE [IF EXISTS] 数据库名; 4.DDL&amp;DMLDDL:数据定义语言仅对database与table起作用（create、drop、alter）DML:数据操纵语言仅对table中的具体数据起作用（select、insert、delete、update） 创建表 create table 表名( ​ 列名 数据类型 列级约束, ​ 列名 数据类型 列级约束 ​ )【表类型】【表字符集】【表注释】 12345678910#创建学生表，并设置表类型、字符集CREATE TABLE `student` ( `id` INT(4) NOT NULL AUTO_INCREMENT COMMENT &apos;主键、学号&apos;, `psd` VARCHAR(20) COLLATE utf8_estonian_ci NOT NULL DEFAULT &apos;123456&apos; COMMENT &apos;密码&apos;, `name` VARCHAR(30) COLLATE utf8_estonian_ci NOT NULL DEFAULT &apos;匿名&apos; COMMENT &apos;学生姓名&apos;, `sex` VARCHAR(2) COLLATE utf8_estonian_ci NOT NULL DEFAULT &apos;男&apos; COMMENT &apos;性别&apos;, `birsday` DATETIME DEFAULT NULL, `email` VARCHAR(20) COLLATE utf8_estonian_ci DEFAULT NULL, PRIMARY KEY (`id`)) ENGINE=INNODB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COLLATE=utf8_estonian_ci 数据类型 约束条件： not null unique primary key 主键名 FOREIGN KEY (Id_P) REFERENCES Persons(Id_P) :一个表中的 FOREIGN KEY 指向另一个表中的 PRIMARY KEY default 默认值 AUTO INCREMENT :在每次插入新记录时，自动地创建主键字段的值","categories":[{"name":"MySQL","slug":"MySQL","permalink":"http://yoursite.com/categories/MySQL/"}],"tags":[{"name":"database","slug":"database","permalink":"http://yoursite.com/tags/database/"},{"name":"DDL","slug":"DDL","permalink":"http://yoursite.com/tags/DDL/"},{"name":"DML","slug":"DML","permalink":"http://yoursite.com/tags/DML/"}]},{"title":"Python模拟登录淘宝(Ⅰ)","slug":"requests库模拟登录淘宝(Ⅰ)","date":"2019-11-05T14:21:22.958Z","updated":"2019-10-30T02:54:44.302Z","comments":true,"path":"2019/11/05/requests库模拟登录淘宝(Ⅰ)/","link":"","permalink":"http://yoursite.com/2019/11/05/requests%E5%BA%93%E6%A8%A1%E6%8B%9F%E7%99%BB%E5%BD%95%E6%B7%98%E5%AE%9D(%E2%85%A0)/","excerpt":"讲模拟登录淘宝之前，我们来回顾一下之前用requests库模拟登录GitHub和新浪微博的过程:这一类模拟登录是比较简单的登录，只需要在请求登录时将用户名和密码上传验证通过就成功了，也就是说一步到位！而淘宝登录就比较复杂，为什么说复杂呢？因为淘宝登录涉及参数多且请求不止一次！","text":"讲模拟登录淘宝之前，我们来回顾一下之前用requests库模拟登录GitHub和新浪微博的过程:这一类模拟登录是比较简单的登录，只需要在请求登录时将用户名和密码上传验证通过就成功了，也就是说一步到位！而淘宝登录就比较复杂，为什么说复杂呢？因为淘宝登录涉及参数多且请求不止一次！ 参考文章~裸睡的猪 淘宝系列欲更新文章内容： 第一篇：Python模拟登录淘宝，详细讲解如何使用requests库登录淘宝pc端。 第二篇：淘宝自动登录2.0，新增Cookies序列化，教大家如何将cookies保存起来。 第三篇：Python爬取淘宝商品避孕套，教大家如何爬取淘宝pc端商品信息。 第四篇：Python分析2000款避孕套，教大家如何做数据分析得出结论。 ———————————————— 1.淘宝登录流程","categories":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/categories/Python/"},{"name":"模拟登录","slug":"Python/模拟登录","permalink":"http://yoursite.com/categories/Python/%E6%A8%A1%E6%8B%9F%E7%99%BB%E5%BD%95/"}],"tags":[{"name":"Requests","slug":"Requests","permalink":"http://yoursite.com/tags/Requests/"},{"name":"POST请求","slug":"POST请求","permalink":"http://yoursite.com/tags/POST%E8%AF%B7%E6%B1%82/"},{"name":"token","slug":"token","permalink":"http://yoursite.com/tags/token/"}]},{"title":"python文件读read()、readline()、readlines()对比","slug":"python的read_readlines_readline","date":"2019-11-05T14:21:22.955Z","updated":"2019-11-04T01:42:34.300Z","comments":true,"path":"2019/11/05/python的read_readlines_readline/","link":"","permalink":"http://yoursite.com/2019/11/05/python%E7%9A%84read_readlines_readline/","excerpt":"&nbsp;&nbsp;&nbsp;read():读取整个文件，将文件内容放到一个字符串变量中&nbsp;&nbsp;&nbsp;readline():读取整行，包括行结束符，并以其作为字符串返回&nbsp;&nbsp;&nbsp;readline():读取所有行然后把它们作为一个字符串列表返回（即把每一行作为一个列表元素）","text":"&nbsp;&nbsp;&nbsp;read():读取整个文件，将文件内容放到一个字符串变量中&nbsp;&nbsp;&nbsp;readline():读取整行，包括行结束符，并以其作为字符串返回&nbsp;&nbsp;&nbsp;readline():读取所有行然后把它们作为一个字符串列表返回（即把每一行作为一个列表元素）","categories":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/categories/Python/"},{"name":"read、readline、readlines对比","slug":"Python/read、readline、readlines对比","permalink":"http://yoursite.com/categories/Python/read%E3%80%81readline%E3%80%81readlines%E5%AF%B9%E6%AF%94/"}],"tags":[{"name":"read() - readline() - readlines()","slug":"read-readline-readlines","permalink":"http://yoursite.com/tags/read-readline-readlines/"}]},{"title":"Hexo主体设置知识点","slug":"Hexo主体设置知识点","date":"2019-10-26T13:28:53.000Z","updated":"2019-11-09T02:33:27.594Z","comments":true,"path":"2019/10/26/Hexo主体设置知识点/","link":"","permalink":"http://yoursite.com/2019/10/26/Hexo%E4%B8%BB%E4%BD%93%E8%AE%BE%E7%BD%AE%E7%9F%A5%E8%AF%86%E7%82%B9/","excerpt":"介绍Hexo一些基本设置，比如分类，标签，作者，简要概述等等以及MarkDown的写法","text":"介绍Hexo一些基本设置，比如分类，标签，作者，简要概述等等以及MarkDown的写法 1.Hexo创建文章、标签、分类的Front-matter方法 Ⅰ&nbsp;&nbsp; Front-matter ⅡFront-matter 是md文件最上方以 — 分隔的区域，用于指定个别文件的变量 其实Front-matter就是在\\Hexo\\source_posts下的.md文件中书写文章标题，上传时间，分类名，标签名等等 字段 含义 值类型 默认值 layout 布局模版 String - title 标题 String - date 创建时间 Date 文件创建时间 description 页面描述、摘要 String - cover 是否显示封面 Bool true 2.Makedown标题页的写法 --- layout: 页面布局（配合主题文档使用） title: 文章名称 date: 文章日期 comments: 文章是否开启评论 photos: 文章封面图（仅部分主题支持） tags: - 文章标签一 - 文章标签二 categories: # 文章分类（文章分类等级） - 父分类 - 子分类 - 孙分类 description: 文章描述，即要在首页显示的摘要（仅部分主题支持） --- 这里是摘要 这里是正文 注意：description 和 方式显示摘要二选一即可，部分主题不支持description， 每个配置英文冒号后面要空一格，不同主题配置有所差异，具体要参考主题文档 3.md文件的基本写法 3.1. ``` 代码段 ``` : 表示以原格式展示代码片段。比如 1234567891011121314$(function () &#123; ...... //鼠标进入的时候,其他的li标签透明度：0.5 $(&quot;.wrap li&quot;).hover(function() &#123; $(this).siblings().stop().fadeTo(400, 0.5); //.stop():停止所有在指定元素上正在运行的动画。 &#125;, function() &#123; // 鼠标离开，其他li 透明度改为 1 $(this).siblings().stop().fadeTo(400, 1); &#125;); console.log($(&apos;.attr a&apos;).prop(&apos;href&apos;)); console.log($(&apos;.attr a&apos;).prop(&apos;title&apos;)); console.log($(&apos;input:checkbox&apos;).attr(&apos;id&apos;)); console.log($(&apos;.office p:eq(0)&apos;).scrollTop());&#125;) 3.2. &lt;img src=”url” width=” “&gt; &nbsp;&nbsp;&nbsp;表示在md文件中展示图片，若不想破坏图片原格式，就只需要写width或者height其中一个，另一个会自适应变化 3.3. 文本修饰:粗体，斜体… &nbsp;&nbsp;&nbsp;粗体文本用两个*或_包含，斜体文本用一个_包含 3.4. 表格(注意其格式) 12345| Tables | Are | Cool || ------------- |:-------------:| -----:|| col 3 is | right-aligned | $1600 || col 2 is | centered | $12 || zebra stripes | are neat | $1 | 3.5. 颜色RGB和字体以及背景颜色 12345678910&lt;font face=\"Tahoma\"&gt;这是一串Tahoma字体&lt;/font&gt;&lt;br/&gt;&lt;font face=\"黑体\"&gt;这是一串黑体字&lt;/font&gt;&lt;br/&gt;&lt;font face=\"微软雅黑\"&gt;这是一串微软雅黑&lt;/font&gt;&lt;br/&gt;&lt;font face=\"STCAIYUN\"&gt;这是一串华文彩云&lt;/font&gt;&lt;br/&gt;&lt;font color=#00ced1 size=7 face=\"黑体\"&gt;背景色+字体+字的size&lt;/font&gt;&lt;br/&gt;&lt;font color=#00ffff size=72&gt;颜色设置&lt;/font&gt;&lt;br/&gt;&lt;font color=gray size=72&gt;灰色处理&lt;/font&gt;&lt;br/&gt;&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=#bfe1f1&gt;背景色是：#bfe1f1&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;Size：规定文本的尺寸大小。可能的值：从 1 到 7 的数字。浏览器默认值是 3 这是一串Tahoma字体这是一串黑体字这是一串微软雅黑这是一串华文彩云背景色+字体+字的size颜色设置灰色处理 3.6. 转义字符 &lt;br&gt; : 换行\\ : 转义字符，原生字符，不加修饰&amp;nbsp; : 空格 3.7 每一篇博文设置图片 只需要在文章前面配置 photos 关键字即可，若没有这种配置，可以选择在正文插入图片，然后使用 将图片显示在摘要里 3.8 图片可点击设置，单独出现 &lt;fancybox&gt;图片设置&lt;/fancybox&gt;","categories":[{"name":"-博客Hexo","slug":"博客Hexo","permalink":"http://yoursite.com/categories/%E5%8D%9A%E5%AE%A2Hexo/"}],"tags":[{"name":"front-matter","slug":"front-matter","permalink":"http://yoursite.com/tags/front-matter/"}]},{"title":"Hello Hexo","slug":"hello-world","date":"2019-10-24T16:00:00.000Z","updated":"2019-11-10T07:53:24.497Z","comments":true,"path":"2019/10/25/hello-world/","link":"","permalink":"http://yoursite.com/2019/10/25/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"初次见面，请多关照","slug":"初次见面_请多关照","date":"2019-10-20T13:01:24.000Z","updated":"2019-10-28T08:09:41.681Z","comments":true,"path":"2019/10/20/初次见面_请多关照/","link":"","permalink":"http://yoursite.com/2019/10/20/%E5%88%9D%E6%AC%A1%E8%A7%81%E9%9D%A2_%E8%AF%B7%E5%A4%9A%E5%85%B3%E7%85%A7/","excerpt":"&nbsp;&nbsp;&nbsp;这是一篇有关我如何使用 Github Pages 和 Hexo 搭建属于自己独立博客的功能展示","text":"&nbsp;&nbsp;&nbsp;这是一篇有关我如何使用 Github Pages 和 Hexo 搭建属于自己独立博客的功能展示 大家好–^^__^^–，我叫陈浩东 &nbsp;&nbsp;&nbsp;本人是嘉兴双环第二分公司GP-12线,滚齿磨齿操作员，目前正学习清洗包装流程、磨齿、滚齿、齿轮生产工艺以及安全生产。&nbsp;&nbsp;&nbsp;对网站开发的有关知识几乎为零，这也是我搭建好自己的不完全博客之后写的第一篇博客，刚开始搭建博客的时候自己也是网上各种百度，由于自己属于小白那种，历经了千辛万苦才弄好，所以借这个机会会一直坚持下去分析自己的知识，一起走向成功的彼岸！","categories":[{"name":"-博客Hexo","slug":"博客Hexo","permalink":"http://yoursite.com/categories/%E5%8D%9A%E5%AE%A2Hexo/"}],"tags":[{"name":"Github Page","slug":"Github-Page","permalink":"http://yoursite.com/tags/Github-Page/"},{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"}]}]}